@model RazorPad.Web.Website.Models.SnippetViewModel
           
<div class="editorContainer">
    <div class="paneheader">
        <div class="title">Model</div>
    </div>

    <div class="modelContent">
        <div class="propinput">
            <input type="text" id="propinput"/>
        </div>
        <div class="modelProps">
            <table id="modelGrid">
                <colgroup>
                    <col width="50%" align="left" />
                    <col width="50%" align="left" />
                </colgroup>
                <thead>
                    <tr>
                        <th class="fontBold">Name</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var prop in Model.ModelProperties)
                    {
                        string type;
                        
                        switch (prop.Value.GetType().ToString())
                        {
                            case "System.Int32":
                            case "System.Int64":
                                type = "int";
                                break;
                            case "System.Double":
                                type = "float";
                                break;
                            default:
                                type = "string";
                                break;
                        }
                            
                        <tr title="@type" class="@type" data-type="@type">
                            <td>
                                <span class="name">@prop.Key</span>
                            </td>
                            <td>
                                <span class='value'>@prop.Value</span>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            &nbsp;
                        </td>
                        <td>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript" charset="utf-8">

    $(function () {
        function addPropRow(data) {
            $('#modelGrid tbody').prepend(String.format("<tr data-type='{2}'><td><span class='name'>{0}</span></td><td><span class='value'>{1}</span></td></tr>", data.name, data.value, data.type));
        }

        function addToModel(txt) {
            var parts = txt.replace(/^\s*/, '').replace(/[;\s]*$/, '').split(' ');
            var prop = { type: parts[0], name: parts[1], value: parts[parts.length - 1].replace(/^"/, '').replace(/"$/, '') };
            addPropRow(prop);
        }

        $('#modelHeader').hpTabs().watermark('model');

        $('#propinput').bind('keypress blur', function (e) {
            if (this.value.replace(/^\s*/, '').replace(/[;\s]*$/, '').length === 0) { return; }
            if (e.type === 'keypress' && e.keyCode !== 13) { return; }
            addToModel(this.value);
            this.value = '';
            return false;
        });

        $('#propinput').val('string Name "world"');

        $('#modelGrid > tbody')
        .delegate('td', 'click', function () {
            $(this).children('span').attr('contentEditable', 'true').focus();
        })
        .delegate('td span', 'keypress blur', function (e) {
            if (e.type === 'keypress' && e.keyCode !== 13) { return; }
            $(this).attr('contentEditable', 'false');
        });

        //$(window).resize(function () { resizeEditor($('#modelEditor')); });
    });
</script>
